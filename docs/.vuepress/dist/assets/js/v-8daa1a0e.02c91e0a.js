"use strict";(self.webpackChunkhamr_doc=self.webpackChunkhamr_doc||[]).push([[509],{464:(a,e,i)=>{i.r(e),i.d(e,{data:()=>r});const r={key:"v-8daa1a0e",path:"/",title:"HamR [哈默尔-私家助理]",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"背景",slug:"背景",children:[]},{level:2,title:"哈默尔(HamR)功能:",slug:"哈默尔-hamr-功能",children:[]},{level:2,title:"家布(JiaBu)功能：",slug:"家布-jiabu-功能",children:[]},{level:2,title:"架构图",slug:"架构图",children:[]},{level:2,title:"功能梳理",slug:"功能梳理",children:[]},{level:2,title:"工程结构",slug:"工程结构",children:[]}],filePathRelative:"README.md",git:{updatedTime:1639296319e3,contributors:[{name:"heyongxian",email:"1064042411@qq.com",commits:3}]}}},200:(a,e,i)=>{i.r(e),i.d(e,{default:()=>t});const r=(0,i(252).uE)('<h1 id="hamr-哈默尔-私家助理" tabindex="-1"><a class="header-anchor" href="#hamr-哈默尔-私家助理" aria-hidden="true">#</a> HamR [哈默尔-私家助理]</h1><h2 id="背景" tabindex="-1"><a class="header-anchor" href="#背景" aria-hidden="true">#</a> 背景</h2><p>人类是群居生物，从古至今都离不开&quot;家&quot;这一概念，无论是大家还是小家，无论社会怎么变化，无论时代怎么发展， 其实我们一直想有一个美好幸福的家庭，这样才能有更好的社会，才会创造更多的价值，才会是宇宙里最好的生命体。 本系统致力于打造免费家庭智能助理，帮助更好发展和管理，成就人类家庭的命运共同体。</p><p>因此推出 &quot;家布(JiaBu)&quot;与&quot;哈默尔(HamR)&quot;两款分布式系统工具， 用于辅助决策与管理家庭，利用数字化工具建立幸福美好的家园。</p><p>哈默尔(HamR)将会是家里的大管家，一经部署即可成为家里的智能管家，帮助打理家里的一切。 家布(JiaBu)将致力于引导家庭资源分配、布局未来、智能决策、为家族成员分担压力，同时给出问题的参考方案。 它将辅助于&quot;哈默尔(HamR)&quot;进行家庭管理，从人、时、事、物、境五个维度综合管理，并且是可私有化部署的不涉及家庭隐私。</p><hr><h2 id="哈默尔-hamr-功能" tabindex="-1"><a class="header-anchor" href="#哈默尔-hamr-功能" aria-hidden="true">#</a> 哈默尔(HamR)功能:</h2><ul><li>存储并管理家中各种人、事、物数据</li><li>辅助收集家族信息（支持私有部署,不涉及隐私）</li><li>评估家庭幸福感</li><li>保存大事记，让美好一直存在</li></ul><hr><h2 id="家布-jiabu-功能" tabindex="-1"><a class="header-anchor" href="#家布-jiabu-功能" aria-hidden="true">#</a> 家布(JiaBu)功能：</h2><ul><li>辅助决策，提升家庭幸福感</li><li>智能提醒，让家中惊喜连连</li><li>模拟事物发展，谋划布局未来</li><li>监测环境，给出行动优化建议</li></ul><h2 id="架构图" tabindex="-1"><a class="header-anchor" href="#架构图" aria-hidden="true">#</a> 架构图</h2><p><img src="img/hamr-架构.png" alt="整理架构图"></p><hr><h2 id="功能梳理" tabindex="-1"><a class="header-anchor" href="#功能梳理" aria-hidden="true">#</a> 功能梳理</h2><p><img src="img/hamr-哈默尔私家助手.png" alt="功能梳理图"></p><hr><h2 id="工程结构" tabindex="-1"><a class="header-anchor" href="#工程结构" aria-hidden="true">#</a> 工程结构</h2><p>工程采用 DDD思想搭建,以下为工程结构及DDD的简单介绍:</p><p>1 ）适配层（Adapter Layer ）：负责对前端展示（web ，wireless ，wap ）的路由和适配，对于传统B/S 系统而言，adapter 就相当于MVC 中的controller ；</p><p>2 ）应用层（Application Layer ）：主要负责获取输入，组装上下文，参数校验，调用领域层做业务处理，如果需要的话，发送消息通知等。层次是开放的，应用层也可以绕过领域层，直接访问基础实施层；</p><p>3 ）领域层（Domain Layer ）：主要是封装了核心业务逻辑，并通过领域服务（Domain Service ）和领域对象（Domain Entity ）的方法对App 层提供业务实体和业务逻辑计算。领域是应用的核心，不依赖任何其他层次；</p><p>4 ）基础实施层（Infrastructure Layer ）：主要负责技术细节问题的处理，比如数据库的CRUD 、搜索引擎、文件系统、分布式服务的RPC 等。此外，领域防腐的重任也落在这里，外部依赖需要通过gateway 的转义处理，才能被上面的App 层和Domain 层使用</p>',23),l={},t=(0,i(744).Z)(l,[["render",function(a,e){return r}]])},744:(a,e)=>{e.Z=(a,e)=>{const i=a.__vccOpts||a;for(const[a,r]of e)i[a]=r;return i}}}]);